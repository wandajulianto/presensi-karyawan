# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy PHP app to Azure Web App - presensi-karyawan

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, gd, zip, bcmath

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-dev --optimize-autoloader

      - name: Install and build frontend assets
        run: |
          npm ci
          npm run build

      - name: Create .env file
        run: |
          echo "APP_NAME=Presensi" >> .env
          echo "APP_ENV=production" >> .env
          echo "APP_KEY=${{ secrets.LARAVEL_APP_KEY }}" >> .env
          echo "APP_DEBUG=false" >> .env
          echo "APP_TIMEZONE=Asia/Jakarta" >> .env
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "SESSION_DRIVER=database" >> .env
          echo "CACHE_STORE=database" >> .env
          echo "QUEUE_CONNECTION=database" >> .env

      - name: Generate optimized autoloader
        run: composer dump-autoload --optimize --classmap-authoritative

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r -x "node_modules/*" ".git/*" "tests/*"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_D8173D1CCDED4776871213EF191D7C85 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8F12746D83FB4E559CD56E22355F7463 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_99CF1AFCA6414930947DA909F7A6B6BE }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'presensi-karyawan'
          slot-name: 'Production'
          package: .

      - name: Configure App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: 'presensi-karyawan'
          slot-name: 'Production'
          app-settings-json: |
            [
              {
                "name": "APP_ENV",
                "value": "production"
              },
              {
                "name": "APP_DEBUG", 
                "value": "false"
              },
              {
                "name": "APP_KEY",
                "value": "${{ secrets.LARAVEL_APP_KEY }}"
              },
              {
                "name": "DB_HOST",
                "value": "${{ secrets.DB_HOST }}"
              },
              {
                "name": "DB_DATABASE",
                "value": "${{ secrets.DB_DATABASE }}"
              },
              {
                "name": "DB_USERNAME", 
                "value": "${{ secrets.DB_USERNAME }}"
              },
              {
                "name": "DB_PASSWORD",
                "value": "${{ secrets.DB_PASSWORD }}"
              }
            ]

      - name: Run Laravel Commands
        uses: azure/cli@v1
        with:
          inlineScript: |
            # Run database migrations
            az webapp ssh --resource-group presensi-rg --name presensi-karyawan --command "cd /home/site/wwwroot && php artisan migrate --force"
            
            # Clear and cache configurations
            az webapp ssh --resource-group presensi-rg --name presensi-karyawan --command "cd /home/site/wwwroot && php artisan config:clear"
            az webapp ssh --resource-group presensi-rg --name presensi-karyawan --command "cd /home/site/wwwroot && php artisan config:cache"
            az webapp ssh --resource-group presensi-rg --name presensi-karyawan --command "cd /home/site/wwwroot && php artisan route:cache"
            az webapp ssh --resource-group presensi-rg --name presensi-karyawan --command "cd /home/site/wwwroot && php artisan view:cache"
            
            # Create storage symlink
            az webapp ssh --resource-group presensi-rg --name presensi-karyawan --command "cd /home/site/wwwroot && php artisan storage:link"
          